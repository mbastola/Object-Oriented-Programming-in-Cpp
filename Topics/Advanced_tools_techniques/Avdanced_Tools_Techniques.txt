Advanced Tools & Techniques

In Main:

	Animal *a = new Grizzly();
	Grizzly *a1= new Grizzly();
	Bear *a2 = new Grizzly();
	Animal *b = new Panda("PuThePanda1");
	Panda *b1 = new Panda("PuThePanda2");
	Bear *b2 = new Panda("PuThePanda3");
	cout << "we have a "
		<< typeid(*a).name() << endl << "and a "
		<< typeid(*a1).name() << endl << "and a "
	<< typeid(*a2).name() << endl << "and a "
	<< typeid(*b).name() << endl << "and a "
	<< typeid(*b1).name() << endl << "and a "
	<< typeid(*b2).name() << endl << endl;
	
Output:
 
we have a class Grizzly

and a class Grizzly

and a class Grizzly

and a class Panda

and a class Panda

and a class Panda

4)
1.	Panda *P1 = dynamic_cast<Panda *>(a); /*Animal pointer to Grizzy cast to panda*/
	Doesnot work (R6010 Abort is called)
2.	Panda *P2 = dynamic_cast<Panda *>(b); /*Animal pointer to Panda cast to panda*/
	Works
3.	Grizzly *G1 = dynamic_cast<Grizzly *>(a); /*Animal pointer to Grizzy cast to grizzly*/
	Works
4.	Grizzly *G2 = dynamic_cast<Grizzly *>(b); /*Animal pointer to Panda cast to grizzly*/
	Doesnot work (R6010 Abort is called)

5)
	G1->growl();
	P2->cuddle();
	auto growl_ptr = &Grizzly::growl; // method ptr for growl
	auto cuddle_ptr = &Panda::cuddle; // method ptr for cuddle
	(G1->*growl_ptr)();
	(P2->*cuddle_ptr)();

6)
Output:


004C7DB0
Animal::Animal()
Bear::Bear()
Endangered::Endangered()
Panda::Panda()
Panda::~Panda()
Endangered::~Endangered()
Bear::~Bear()
Animal::~Animal()
004C7DB0
